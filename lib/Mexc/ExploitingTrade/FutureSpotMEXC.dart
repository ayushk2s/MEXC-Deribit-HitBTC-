import 'dart:async';
import 'dart:convert';
import 'package:http/http.dart' as http;

Future<void> compareBtcPrices() async {
  const spotUrl = 'https://api.mexc.com/api/v3/ticker/price?symbol=DOGEUSDT';
  const futuresUrl = 'https://contract.mexc.com/api/v1/contract/ticker?symbol=DOGE_USDT';

  try {
    final spotResponse = await http.get(Uri.parse(spotUrl));
    final futuresResponse = await http.get(Uri.parse(futuresUrl));

    if (spotResponse.statusCode == 200 && futuresResponse.statusCode == 200) {
      final spotData = jsonDecode(spotResponse.body);
      final futuresData = jsonDecode(futuresResponse.body);

      double spotPrice = spotData['price'] is String
          ? double.parse(spotData['price'])
          : spotData['price'].toDouble();

      double futuresPrice = futuresData['data']['lastPrice'] is String
          ? double.parse(futuresData['data']['lastPrice'])
          : futuresData['data']['lastPrice'].toDouble();

      double difference = futuresPrice - spotPrice;

      print('BTC Spot Price: \$${spotPrice.toStringAsFixed(5)}');
      print('BTC Futures Price: \$${futuresPrice.toStringAsFixed(5)}');
      print('Difference: \$${difference.toStringAsFixed(5)}');
      print('-------------------------------------------------------');
    } else {
      print('Failed to fetch prices. Spot: ${spotResponse.body} Future: ${futuresResponse.body}');
    }
  } catch (e) {
    print('Error: $e');
  }
}

void main() {
  Timer? t;
  t = Timer.periodic(Duration(seconds: 1), (Timer timer){
    compareBtcPrices();
  });
}
